#include <stdint.h>
#include <string>

// Assume this isn't just dummy code
namespace img {

	enum pixeltype {
		rgb,
		cmyk,
		lab,
		hsl
	};

	class image {
	public:
		image(std::string path);
		uint8_t*** as_array();
		long get_height();
		long get_width();

	};
};

int main() {
	// Assume "image" is a class from namespace "img"...
	img::image img_file = img::image("path/to/file.png");

	// 3-dimensional array: Set its size to [width][height][3]
	// the [3] is there because each pixel has 3 color channels
	uint8_t img_rgb[img_file.get_width()]
	               [img_file.get_height()]
                   [3]
				   = img_file.as_array();
	// NOTE: extremely prone to stack overflows, this is why
	// vector would be better

	// Let's edit the image!
	// Here's an example of what adjusting the brightness
	// MIGHT look like:
	for (uint8_t** row : img_rgb) {						// For every row of pixels in img_rgb...
		for (uint8_t* pixel : row) {					// For every pixel in each row in img_rgb...
			for (uint8_t channel : pixel) {				// For every color channel in each pixel...
				img_rgb[row][pixel][channel] *= x;		// Multiply each color channel by a number!
			}
		}
	}

	return 0;
}
